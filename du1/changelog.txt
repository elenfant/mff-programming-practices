                       Configurator.java Change Log
                       ----------------------------

Opravy:

PropertySetter
- přejmenování - odstranění zkratky
- odstranění zkratky z názvu metody a parametru

Logging(trace)
- přidání {} kolem příkazu v if
- přejmenování: f -> format
                a -> args

ConfigurationException
- odstranění zkratek z názvu
- přejmenování: f -> format
                a -> args
                t -> throwable

AllDeclaredFieldsIterable
- změna názvu
- přejmenování: lc -> leafClass
                kl -> klass

ArrayIterator
- změna názvu
- změna názvu proměnných - odstranění zkratek

Formátování
- obalení každého bloku {}, konzistentní používání { na stejném řádku jako řídící struktura
- konzistentní použití mezer kolem operátorů, čárek
- odsazení kódu pouze pomocí tabů
- odstranění whitespace na koncích řádků

Configurator.set()
- přejmenování parametrů a lokálních proměnných
- vyjmutí vnořeného if

Všude
- odstranění zkratek z názvů tříd, funkcí a jejich parametrů
- sjednocení pořadí parametrů u funkcí (target, name a naopak)
- přidání throws ExceptionClass za jednotlivé fce nebo @throws(classOf[Exception]) anotaci
- 80 znaků na šířku

Configurator.getObjectFieldValue()
- nová funkce pro získání field hodnoty objektu

Configurator.getPropertyName()
- nová funkce pro získání jména property, případně jména fieldu, pokud property má prázdné jméno

Configurator.configureFieldPropertyToDefault()
- nová funkce zapouzdřující nastavení defaultní hodnoty danému fieldu na objektu 

Configurator.check()
- přejmenování lokálních proměnných (ze zkratek)
- inicializace při deklaraci, deklarace blízko prvního použití
- použití getObjectFieldValue(), getPropertyName() a configureFieldPropertyToDefault()
- sjednocení testu před nastavením defaultní hodnoty
- sjednocení testu na povinnou default hodnotu (zrušení else if () větve)
- doplnění throws anotace

Configurator.makeFieldPropertySetter()
- getPropertyName()
- inicializace proměnné classPropertyName;
- obrácení podmínky u (property == null) -> spolu s inicializací ušetří jednu else větev

Configurator.makeValueInstance()
- nahrazen ten zběsilý return
- v rámci něho změněno pole (new Class<?>[] { String.class }) na jednu třídu (String.class)

Configurator.makeMethodSetter()
- přejmenování lokálních proměnných (ze zkratek)
- vyčlenění kódu do samostatných funkcí

Configurator.createMethodSetter()
- nová funkce pro vytvoření PropertySetteru pro danou property, která použije danou Setter metodu

Configurator.getMethodFieldName()
-nová funkce zapouzdřující hledání fieldu, který nastavuje daná metoda



TODO
- doplnit komentáře k novým funkcím? (včetně javadocu)
- nemá interface začínat na I? http://stackoverflow.com/questions/541912/interface-naming-in-java
- zrušit všechny Warningy