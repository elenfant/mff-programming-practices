                       Configurator.java Change Log
                       ----------------------------

Všude
- odstranění zkratek z názvů tříd, funkcí a jejich parametrů
- sjednocení pořadí parametrů u funkcí (target, name a naopak)
- přidání throws ExceptionClass a @throws(classOf[Exception]) anotaci
- 80 znaků na šířku

Formátování
- obalení každého bloku {}, konzistentní používání { na stejném řádku
	jako řídící struktura
- konzistentní použití mezer kolem operátorů, čárek
- odsazení kódu pouze pomocí tabů
- odstranění whitespace na koncích řádků

PropertySetter
- přejmenování - odstranění zkratky
- odstranění zkratky z názvu metody a parametru

Logging(trace)
- přidání {} kolem příkazu v if
- přejmenování: f -> format
                a -> args

ConfigurationException
- odstranění zkratek z názvu
- přejmenování: f -> format
                a -> args
                t -> throwable
- doplnění serialVersionUID

AllDeclaredFieldsIterable
- změna názvu
- přejmenování: lc -> leafClass
                kl -> klass

ArrayIterator
- změna názvu
- změna názvu proměnných - odstranění zkratek

Configurator.setProperty()
- přejmenování parametrů a lokálních proměnných
- vyjmutí vnořeného if
- popisnější pojmenování původní funkce set()

Configurator.getObjectFieldValue()
- nová funkce pro získání field hodnoty objektu

Configurator.getPropertyName()
- nová funkce pro získání jména property, případně jména fieldu, pokud property
	má prázdné jméno

Configurator.setFieldPropertyToDefault()
- nová funkce zapouzdřující nastavení default hodnoty danému fieldu na objektu

Configurator.configureFieldProperty()
- přejmenována na setFieldProperty() 

Configurator.checkConfigurableFields()
- přejmenování lokálních proměnných (ze zkratek)
- inicializace při deklaraci, deklarace blízko prvního použití
- použití getObjectFieldValue(), getPropertyName()
	a configureFieldPropertyToDefault()
- sjednocení testu před nastavením defaultní hodnoty
- sjednocení testu na povinnou default hodnotu (zrušení else if () větve)
- doplnění throws anotace
- popisnější pojmenování původní funkce check()

Configurator.makeFieldPropertySetter()
- getPropertyName()
- inicializace proměnné classPropertyName;
- obrácení podmínky u (property == null) -> spolu s inicializací ušetří
	jednu else větev

Configurator.makeValueInstance()
- nahrazen ten zběsilý return

Configurator.makeMethodSetter()
- přejmenování lokálních proměnných (ze zkratek)
- vyčlenění kódu do samostatných funkcí

Configurator.createMethodSetter()
- nová funkce pro vytvoření PropertySetteru pro danou property,
	která použije danou Setter metodu

Configurator.getMethodFieldName()
- nová funkce zapouzdřující hledání fieldu, který nastavuje daná metoda